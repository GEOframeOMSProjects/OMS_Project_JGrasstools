import static oms3.SimBuilder.instance as OMS3
def home = oms_prj


OMS3.sim {

resource "$oms_prj/lib"

 model() {
   components {
  
  
        "reader_tca"            	  "org.jgrasstools.gears.io.rasterreader.OmsRasterReader"
        "reader_flow"            	  "org.jgrasstools.gears.io.rasterreader.OmsRasterReader"
        "reader_slope"            	  "org.jgrasstools.gears.io.rasterreader.OmsRasterReader"
        "reader_tc3"            	  "org.jgrasstools.gears.io.rasterreader.OmsRasterReader"
        "extract_net"				  "org.jgrasstools.hortonmachine.modules.network.extractnetwork.OmsExtractNetwork"       
        "writer_net"            	  "org.jgrasstools.gears.io.rasterwriter.OmsRasterWriter"


            
         
   }

  
   parameter{
   
         "reader_tca.file"                      "${home}/output/Tca.asc"
         "reader_flow.file"                     "${home}/output/drain_dir.asc"
         //"reader_slope.file"                     "${home}/output/slope.asc"
         //"reader_tc3.file"                     "${home}/output/tc3.asc"
         
         "extract_net.pMode"		"tca"  //"tca and slope" or "tca in convergent sites"
         "extract_net.pThres"		200
         
         
         "writer_net.file"						"${home}/output/net_mode1.asc"


        
   }
    connect {
        
        "reader_tca.outRaster"                 		"extract_net.inTca"
        "reader_flow.outRaster"                     "extract_net.inFlow"
        //"reader_slope.outRaster"                 	"extract_net.inSlope"
        //"reader_tc3.outRaster"                 	"extract_net.inTc3"
        
        
        "extract_net.outNet"			   			 "writer_net.inRaster"

   }

 }
}


